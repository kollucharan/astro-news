---
export const prerender = false;

import { getCategoryBySlug } from "@/lib/fetchCategories";
import ListLayout from "@/layouts/list.astro";
import Pagination from "@/components/shared/pagination.astro";
import WideCard from "@/components/cards/wideCard.astro";
import { SITE } from "@/lib/config";

const { category, page } = Astro.params;
if (!category) return Astro.redirect("/404");

// Your existing query accepts slug.current; we pass the route param as-is.
const categoryData = await getCategoryBySlug(category);
if (!categoryData) return Astro.redirect("/404");

// Pagination
const currentPage = Math.max(1, Number(page || 1));
const pageSize = SITE.postsPerPage || 10;

const all = categoryData.articles ?? [];
const lastPage = Math.max(1, Math.ceil(all.length / pageSize));
const safePage = Math.min(currentPage, lastPage);

const start = (safePage - 1) * pageSize;
const end = start + pageSize;
const articles = all.slice(start, end);

const baseUrl = `/categories/${category}`;
const prevUrl = safePage > 1 ? `${baseUrl}/${safePage - 1}` : undefined;
const nextUrl = safePage < lastPage ? `${baseUrl}/${safePage + 1}` : undefined;

const entry = {
  title: categoryData.title,
  description: categoryData.description ?? "",
};
---

<ListLayout header={categoryData.title} entry={entry}>
  <ul class="flex flex-col gap-2 flex-1">
    {articles.map((article, index) => (
      <WideCard article={article} isLast={index === articles.length - 1} />
    ))}
  </ul>

  {lastPage > 1 && (
    <Pagination
      length={lastPage}
      currentUrl={`${baseUrl}/${safePage}`}
      currentPage={safePage}
      baseUrl={baseUrl}
      prevUrl={prevUrl}
      nextUrl={nextUrl}
      lastUrl={`${baseUrl}/${lastPage}`}
    />
  )}
</ListLayout>

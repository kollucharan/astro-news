---
import { getAllAuthors, getAuthorBySlug } from "@/lib/fetchAuthors";
import ListLayout from "@/layouts/list.astro";
import WideCard from "@/components/cards/wideCard.astro";
import Pagination from "@/components/shared/pagination.astro";
import { SITE } from "@/lib/config";

export async function getStaticPaths() {
  const authors = await getAllAuthors();
  const pageSize = SITE.postsPerPage;
  const paths = [];

  for (const author of authors) {
    const authorData = await getAuthorBySlug(author.slug?.current || author._id);
    const numArticles = authorData.articles?.length ?? 0;
    const numPages = Math.max(1, Math.ceil(numArticles / pageSize));
    
    for (let page = 1; page <= numPages; page++) {
      paths.push({
        params: {
          id: author.slug?.current || author._id,
          page: page.toString(),
        },
        props: {
          authorSlug: author.slug?.current || author._id,
          pageNumber: page,
          totalArticles: numArticles,
        },
      });
    }
  }

  return paths;
}

const { authorSlug, pageNumber, totalArticles } = Astro.props;
const authorData = await getAuthorBySlug(authorSlug);

if (!authorData) {
  return Astro.redirect("/404");
}

// Pagination logic
const pageSize = SITE.postsPerPage;
const startIndex = (pageNumber - 1) * pageSize;
const endIndex = startIndex + pageSize;
const articles = authorData.articles?.slice(startIndex, endIndex) ?? [];
const totalPages = Math.ceil(totalArticles / pageSize);

const entry = {
  title: `${authorData.name}'s Articles`,
  description: `Articles written by ${authorData.name}`,
};
---

<ListLayout header={`${authorData.name}'s Articles`} entry={entry}>
  <section class="flex-1">
    <ul class="flex flex-col gap-4">
      {articles.map((article, index) => (
        <WideCard
          article={article}
          isLast={index === articles.length - 1}
        />
      ))}
    </ul>
  </section>

  {totalPages > 1 && (
    <Pagination
      length={totalPages}
      currentPage={pageNumber}
      baseUrl={`/authors/${authorSlug}`}
      // Add other pagination props as needed
    />
  )}
</ListLayout>
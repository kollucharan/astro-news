---
import BaseLayout from "@/layouts/base.astro";
import ContentLayout from "@/layouts/content.astro";
import ArticleHeader from "./_components/article-header.astro";
import { getAllPosts, getPostBySlug } from "@/lib/fetchPosts";

export const getStaticPaths = async () => {
  const articles = await getAllPosts();
  
  return articles.map((article) => ({
    params: { slug: article.slug.current },
    props: { article },
  }));
};

const { article } = Astro.props;

// Convert Portable Text to HTML
const convertPortableTextToHtml = (blocks: any[]) => {
  if (!blocks || !Array.isArray(blocks)) return '';
  
  return blocks.map((block) => {
    if (block._type === 'block') {
      const text = block.children?.map((child: any) => child.text).join('') || '';
      
      switch (block.style) {
        case 'h1':
          return `<h1>${text}</h1>`;
        case 'h2':
          return `<h2>${text}</h2>`;
        case 'h3':
          return `<h3>${text}</h3>`;
        case 'h4':
          return `<h4>${text}</h4>`;
        case 'blockquote':
          return `<blockquote>${text}</blockquote>`;
        default:
          return `<p>${text}</p>`;
      }
    }
    return '';
  }).join('');
};

const htmlContent = convertPortableTextToHtml(article.body);

// Calculate reading time
const getReadingTime = (body: any) => {
  if (!body) return "2 min read";
  
  const textContent = body
    .filter((block: any) => block._type === 'block')
    .map((block: any) => 
      block.children?.map((child: any) => child.text).join(' ') || ''
    )
    .join(' ');
  
  const wordCount = textContent.split(' ').length;
  const readingTime = Math.ceil(wordCount / 200);
  return `${readingTime} min read`;
};
---

<BaseLayout entry={article}>
  <ArticleHeader
    article={article}
    readingTime={getReadingTime(article.body)}
  />
  <ContentLayout>
    <div class="prose prose-lg max-w-none">
      {htmlContent ? (
        <div set:html={htmlContent} />
      ) : (
        <p>No content available for this article.</p>
      )}
    </div>
  </ContentLayout>
</BaseLayout>
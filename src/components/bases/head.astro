---
import "@/styles/global.css";
import "@fontsource/source-sans-pro/400.css";
import "@fontsource/source-sans-pro/600.css";
import "@fontsource/source-sans-pro/700.css";
import "@fontsource-variable/source-serif-4";
import { ClientRouter } from "astro:transitions";
import { SITE } from "@/lib/config";
import type { ArticleMeta, Meta } from "@/lib/types";

type Props = {
  meta: Meta | ArticleMeta;
};

const { meta } = Astro.props;

const isArticleMeta = (props: Props["meta"]): props is ArticleMeta =>
  props.type === "article";
const canonicalURL = new URL(Astro.url.pathname, Astro.site).href;
const OGImage = new URL(meta.ogImage, Astro.url).href;
---

<head>
  <!-- Global Metadata -->
  <meta charset={SITE.charset} />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
 <link rel="icon" href="/talview_favicon.png"  />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />
  <!-- Page Metadata -->
  <title>{meta.title}</title>
  <meta name="title" content={meta.metaTitle} />
  <meta name="description" content={meta.description} />
  {
    isArticleMeta(meta) ? (
      <>
        <meta
          property="article:published_time"
          content={new Date(meta.publishedTime).toISOString()}
        />
        <meta
          property="article:modified_time"
          content={new Date(meta.lastModified).toISOString()}
        />

        {meta.authors.map((author) => (
          <>
            <meta property="author" content={author.name} />
            <meta
              property="article:author"
              content={`${Astro.site}authors/${author.link}`}
            />
          </>
        ))}
      </>
    ) : null
  }

  <ClientRouter />
</head>
